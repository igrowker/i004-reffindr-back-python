name: Production CI/CD Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment to deploy'
        required: true
        default: 'main'
        type: choice
        options:
          - main

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:prod
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:buildcache,mode=max

  pull-and-deploy:
    runs-on: [self-hosted, linux, python]
    needs: docker-build-and-push
    steps:
    - name: Deploy Docker container to EC2
      run: |
        docker stop reffindr-python || true
        docker rm -f reffindr-python || true
    
        docker system prune -af --volumes
    
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:prod
    
        docker run \
        -d \
        --name reffindr-python \
        -e PORT=${{ secrets.CONTAINER_PORT }} \
        -p ${{ secrets.HOST_PORT }}:${{ secrets.CONTAINER_PORT }} \
        ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:prod
